# https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
# Workflows commands (::set-output, etc): # https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-output-parameter
<% const isYarn = packager === 'yarn' %>
name: <%- deployable ? 'Continuous Integration and Continuous Deployment ⚙🚀' : 'Continuous Integration ⚙' %>

on:
  push:
    branches: [main]

  pull_request:
    branches: [main]

jobs:
  test_build:
    name: Test and Build ⚙⚛

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [16.x, 'lts/*']

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2.3.4

      - name: Use NodeJS ${{ matrix.node }} 📦
        uses: actions/setup-node@v2.2.0
        with:
          node-version: ${{ matrix.node }}

      - name: Get <%- isYarn ? 'Yarn' : 'NPM' %> Cache Directory Path 🐈
        id: <%- isYarn ? 'yarn' : 'npm' %>-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache Directories 🧶
        uses: actions/cache@v2.1.6
        with:
          path: |
            ${{ steps.<%- isYarn ? 'yarn' : 'npm' %>-cache-dir-path.outputs.dir }}
            ${{ github.workspace }}/node_modules/.cache
          key: ${{ runner.os }}-${{ matrix.node }}-${{ hashFiles('**/<%- isYarn ? 'yarn.lock' : 'package-lock.json' %>') }}

      - name: Install Dependencies ✨
        run: <%- isYarn ? 'yarn install --frozen-lockfile --check-files' : 'npm ci' %>

      - name: Run Linter 👨🏻‍💻
        run: <%- isYarn ? 'yarn' : 'npm run' %> lint

      - name: Run Formatter 💅
        run: <%- isYarn ? 'yarn' : 'npm run' %> format

      - name: Run Test 🛠
        run: <%- isYarn ? 'yarn' : 'npm run' %> test

      - name: Run Build ⚙
        run: <%- isYarn ? 'yarn' : 'npm run' %> build

      <% if (deployable) { %>- name: Cache build ready to deploy 🚀
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./dist
          key: ${{ github.sha }}-${{ runner.os }}-${{ matrix.node }}

  deploy:
    name: Deploy to production ✨🚀
    needs: test_build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: ['lts/*']

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2.3.4

      - name: Restore build cache ♻️
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./dist
          key: ${{ github.sha }}-${{ runner.os }}-${{ matrix.node }}

      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: dist
          clean: true<% } %>
